{"version":3,"sources":["components/send_message.js","components/Button.js","App.js","index.js"],"names":["send_message","message","msg","chrome","runtime","sendMessage","response","console","log","hell","a","readLocalStorage","key","Promise","resolve","reject","storage","local","get","result","key1","text_map","true","false","Button","props","state","isToggleOn","handleClick","bind","this","setState","prevState","set","className","onClick","React","Component","App","class","ReactDOM","render","document","getElementById"],"mappings":"iRASiBA,MARjB,WAAmC,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAC9B,cAAkBA,EAAlB,eAA2B,CAAtB,IAAMC,EAAG,KACZC,OAAOC,QAAQC,YAAY,KAAMH,GAAK,SAACI,GAAD,OAAcC,QAAQC,IAAI,yB,gCCYvDC,I,2EAAf,8BAAAC,EAAA,6DACQC,EADR,+BAAAD,EAAA,MAC2B,WAAOE,GAAP,SAAAF,EAAA,+EAChB,IAAIG,SAAQ,SAACC,EAASC,GAC3BZ,OAAOa,QAAQC,MAAMC,IAAI,OAAO,SAAUC,GACxCL,EAAO,OAACK,QAAD,IAACA,aAHW,2CAD3B,+DAQmBR,EAAiB,OARpC,cAQMS,EARN,yBAWSA,EAAKR,KAXd,2C,wBAcA,IAAMS,EAAW,CACfC,KAAK,YACLC,MAAM,cAEFC,E,kDACJ,WAAYC,GAAQ,IAAD,6BAGjBzB,EAAa,OACb,cAAMyB,IACDC,MAAQ,CAACC,WAAa,MAM3B,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAXF,E,4FAkBnB,sBAAAnB,EAAA,kEACEoB,KADF,SACmCrB,IADnC,yBACiBkB,WADjB,WAC4C,WACxC3B,EAAa,YAAY8B,KAAKJ,MAAMC,aAFxC,KACOI,SADP,qE,+EASA,WACED,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,YAAaK,EAAUL,eACrB,WACFxB,OAAOa,QAAQC,MAAMgB,IAAI,CAAC,IAAOH,KAAKJ,MAAMC,YAC5C3B,EAAa,yBAAyB8B,KAAKJ,MAAMC,kB,oBAKrD,WACE,OACE,wBAAQO,UAAY,QAAQC,QAASL,KAAKF,YAA1C,SACGP,EAASS,KAAKJ,MAAMC,kB,GAzCRS,IAAMC,WAkDZb,ICjFf,SAASc,IACP,OACE,qBAAKC,MAAM,YAAX,SACE,gCACE,sDACA,yFACA,cAAE,EAAF,SCGRC,IAASC,OAAO,cAAEH,EAAF,IAAUI,SAASC,eAAe,W","file":"static/js/main.d7631345.chunk.js","sourcesContent":["/*global chrome*/\r\nfunction send_message(...message) {\r\n    for (const msg of message) { \r\n      chrome.runtime.sendMessage(null, msg, (response) => console.log(\"here from react!\"));\r\n  \r\n    }\r\n    \r\n  }\r\n  \r\n  export default send_message;","\r\n/*global chrome*/\r\nimport './Button.css';\r\n\r\nimport send_message from './send_message.js'\r\nimport React, {Component} from 'react';\r\n/*\r\nfunction send_message(...message) {\r\n  for (const msg of message) { \r\n    chrome.runtime.sendMessage(null, msg, (response) => console.log(\"here from react!\"));\r\n\r\n  }\r\n  \r\n}*/\r\n\r\nasync function hell(){\r\n  const readLocalStorage = async (key) => {\r\n    return new Promise((resolve, reject) => {\r\n      chrome.storage.local.get(\"key\", function (result) {\r\n        resolve(result ?? false);  \r\n      });\r\n    });\r\n  };\r\n  let key1 = await readLocalStorage('key');\r\n\r\n\r\n  return key1.key\r\n}\r\n\r\nconst text_map = {\r\n  true:'iFrame on',\r\n  false:'iFrame off'\r\n}\r\nclass Button extends React.Component {\r\n  constructor(props) {\r\n\r\n    \r\n    send_message(\"51\")\r\n    super(props);\r\n    this.state = {isToggleOn:  null}\r\n    /*\r\n    this.setState({isToggleOn: hell().then(chrome.storage.local.set({'key': this.state.isToggleOn}))}, function(){\r\n      send_message(\"set value\"+this.state.isToggleOn)\r\n    })*/\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    \r\n\r\n\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({isToggleOn: await hell()}, function(){\r\n      send_message(\"set value\"+this.state.isToggleOn)\r\n    })\r\n  }\r\n  \r\n  \r\n\r\n\r\n  handleClick() {\r\n    this.setState(prevState => ({\r\n      isToggleOn: !prevState.isToggleOn\r\n    }), function() {\r\n      chrome.storage.local.set({'key': this.state.isToggleOn}, \r\n      send_message(\"state has been set to \"+this.state.isToggleOn))\r\n\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button className = \"hello\" onClick={this.handleClick}>\r\n        {text_map[this.state.isToggleOn]}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Button;","\nimport Button from './components/Button';\nfunction App() {\n  return (\n    <div class=\"container\">\n      <div>\n        <h2>Javascript extension</h2>\n        <p>Information: Grabs text from protected google docs pages</p>\n        < Button />\n      </div>\n    </div>\n  );\n}\n\nfunction App2() {\n  return (\n    <div>\n      <p>hello2</p>\n    </div>\n  );\n}\n\n\n\n\n//export default App;\nexport { App, App2 };\n","\n/*global chrome*/\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport {App, App2} from './App';\n\nimport Button from './components/Button';\n\n\n\nReactDOM.render(< App />, document.getElementById('root'));\n\n"],"sourceRoot":""}